name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build and Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Format
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --workspace --all-targets -- -D warnings

      - name: Build
        run: cargo build --workspace --all-features --verbose

      - name: Tests
        run: cargo test --workspace --all-features --verbose

      - name: Doc build
        run: cargo doc --workspace --no-deps

  audit:
    name: Security Audit (ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Generate lockfile (if missing)
        run: cargo generate-lockfile

      - name: Install cargo-audit
        run: cargo install cargo-audit --locked

      - name: Audit
        run: cargo audit

  deny:
    name: License/Deny Check (ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Generate lockfile (if missing)
        run: cargo generate-lockfile

      - name: Install cargo-deny
        run: cargo install cargo-deny --locked

      - name: Cargo deny check
        run: cargo deny check

  coverage:
    name: Coverage (ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin --locked

      - name: Run coverage (core crates)
        run: |
          cargo tarpaulin \
            -p expr_core \
            -p simplify \
            -p polys \
            -p calculus \
            -p io \
            -p plot \
            -p matrix \
            -p solver \
            --out Xml --engine llvm --fail-under 80
